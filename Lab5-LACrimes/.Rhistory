# View the attributes associated with each county in the CSV data
head(Census.Data)
# View the attributes associated with each county
dim(Census.Data)
str(Census.Data)
# View the attributes associated with each county
dim(Census.Data)
#str(Census.Data)
# Let's further subset the data to make a new, cleaner dataset.
# To uncomplicate things, let's extract data from the original census.
head(Census.Data)
var <- c("GEO.id2","HC01_VC85","HC03_VC50")
names(Census.Subset)[2:4]<- c("MedInc15", "AgMnJb15","RtlJb15")
glimpse(Census.Subset)
# Creates a simple choropleth map of our a AgMnJb15 variable
tm_shape(WV_County) + tm_fill("AgMnJb15")
# Joins data to the shapefile
WV_county <- merge(WV_county, Census.Subset, by.x="GEOID", by.y="GEO.id2")
names(Census.Subset)[2:4]<- c("MedInc15", "AgMnJb15","RtlJb15")
glimpse(Census.Subset)
# Joins data to the shapefile
WV_county <- merge(WV_county, Census.Subset, by.x="GEOID", by.y="GEO.id2")
# Joins data to the shapefile
#WV_county <- merge(WV_county, Census.Subset, by.x="GEOID", by.y="GEO.id2")
head(WV_county)
# Joins data to the shapefile
WV_county <- merge(WV_county, Census.Subset, by.x="FIPSSTCO", by.y="GEO.id2")
head(WV_county)
# Joins data to the shapefile
WV_county <- merge(County.Areas, Census.Subset, by.x="FIPSSTCO", by.y="GEO.id2")
head(WV_county)
library(tmap)
library(leaflet)
# Creates a simple choropleth map of our a AgMnJb15 variable
tm_shape(WV_County) + tm_fill("AgMnJb15")
# Creates a simple choropleth map of our a AgMnJb15 variable
tm_shape(WV_County) + tm_fill("AgMnJb15")
# Creates a simple choropleth map of our a AgMnJb15 variable
tm_shape(WV_county) + tm_fill("AgMnJb15")
# setting a colour palette
tm_shape(WV_County) + tm_fill("HC01_VC85", palette = "-Greens")
# setting a colour palette
tm_shape(WV_county) + tm_fill("HC01_VC85", palette = "-Greens")
# Display the color palette
library(RColorBrewer)
display.brewer.all()
# setting a colour palette
tm_shape(WV_county) + tm_fill("HC01_VC85", palette = "-Greens")
# setting a colour palette
tm_shape(WV_county) + tm_fill("HC01_VC85", palette = "-BrBG")
# setting a colour palette
tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "-BrBG")
# changing the intervals
tm_shape(WV_County) + tm_fill("HC01_VC85", style = "quantile", palette = "Reds")
# changing the intervals
tm_shape(WV_county) + tm_fill("HC01_VC85", style = "quantile", palette = "Reds")
# changing the intervals
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "quantile", palette = "Reds")
# number of levels
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "quantile", n = 7, palette = "Reds")
# changing the intervals
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "quantile", palette = "-BrBG")
# number of levels
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "quantile", n = 7, palette = "-BrBG")
# includes a histogram in the legend
tm_shape(WV) + tm_fill("AgMnJb15", style = "jenks", n=6, palette = "-BrBG", legend.hist = TRUE)
# includes a histogram in the legend
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "jenks", n=6, palette = "-BrBG", legend.hist = TRUE)
# add borders
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "jenks", n=6, palette = "-BrBG") +
tm_borders(alpha=.4)
# north arrow
tm_shape(WV_county) + tm_fill("AgMnJb15", style = "jenks", n=6, palette = "-BrBG") +
tm_borders(alpha=.4) +
tm_compass()
# adds in layout, gets rid of frame
tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "-BrBG", style = "jenks", title = "% Jobs High Risk Employment") +
tm_borders(alpha=.4) +
tm_compass() +
tm_layout(legend.text.size = 1.1, legend.title.size = 1.5, legend.position = c("right", "bottom"), frame = FALSE)
# ReMap
BLS-Data <- tm_shape(WV_county) + tm_fill("AveEmp15", palette = "BuPu", style = "jenks", title = "Coal Mng Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
# ReMap
BLSData <- tm_shape(WV_county) + tm_fill("AveEmp15", palette = "BuPu", style = "jenks", title = "Coal Mng Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
ACSData <- tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "BuPu", style = "jenks", title = "High Risk Job %") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(BLS-Data,ACS-Data)
# ReMap
BLSData <- tm_shape(WV_county) + tm_fill("AveEmp15", palette = "BuPu", style = "jenks", title = "Coal Mng Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
ACSData <- tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "BuPu", style = "jenks", title = "High Risk Job %") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(BLSData,ACSData)
# ReMap
BLSData <- tm_shape(WV_county) + tm_fill("AveEmp15", palette = "-BrBG", style = "jenks", title = "Coal Mng Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
ACSData <- tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "-BrBG", style = "jenks", title = "High Risk Job %") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(BLSData,ACSData)
# ReMap
BLSData <- tm_shape(WV_county) + tm_fill("AveEmp15", palette = "BuPu", style = "jenks", title = "Coal Mng Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
ACSData <- tm_shape(WV_county) + tm_fill("AgMnJb15", palette = "BuPu", style = "jenks", title = "High Risk Job %") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(BLSData,ACSData)
# Another Route:
tm_shape(WV_county) +
tm_polygons(c("AveEmp15", "AgMnJb15"),
style=c("jenks", "jenks"),
palette=list("BuPu", "BuPu"),
title=c("Coal Mng Jobs", "High Risk Jon %")) +
tm_facets(ncol=2)
# Another Route:
tm_shape(WV_county) +
tm_polygons(c("AveEmp15", "AgMnJb15"),
style=c("jenks", "jenks"),
palette=list("BuPu", "BuPu"),
title=c("Coal Mng Jobs", "High Risk Jobs %")) +
tm_facets(ncol=2)
ACS15var <- load_variables(2015, "acs5", cache = TRUE)
view(ACS14var)
ACS15var <- load_variables(2015, "acs5", cache = TRUE)
view(ACS14var)
WV_county_medinc <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
state = "WV",
year = 2015)
WV_county_medinc.sp <- get_acs(state = "WV",
geography = "county",
variables = "B19013_001",
geometry = TRUE)
head(WV_county_medinc.sp)
WV_county_medinc.sp %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
tm_shape(WV_county_medinc.sp) + tm_fill("estimate", palette = "-BrBG")
tm_shape(WV_county_medinc.sp) + tm_fill("estimate", palette = "BuPu")
tm_shape(WV_county_medinc.sp) + tm_fill("estimate", palette = "BuPu", title ="Med Income")
tm_shape(WV_county_medinc.sp) + tm_fill("estimate", palette = "BuPu", title ="Median Income")
WV_tracts_medinc.sp <- get_acs(state = "WV",
geography = "tract",
variables = "B19013_001",
geometry = TRUE)
head(WV_tracts_medinc.sp)
WV_tracts_medinc.sp %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
tm_shape(WV_tracts_medinc.sp) + tm_fill("estimate", palette = "BuPu", title ="Median Income")
View(ACS15var)
tm_shape(WV_tracts_medinc.sp) + tm_fill("estimate", style = "sd", palette = "BuPu", title ="Median Income")
tm_shape(WV_tracts_medinc.sp) + tm_fill("estimate", style = "Jenks", palette = "BuPu", title ="Median Income")
tm_shape(WV_tracts_medinc.sp) + tm_fill("estimate", style = "jenks", palette = "BuPu", title ="Median Income")
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", palette = "BuPu", style = "jenks", title = "Counties") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WV_county_mining.sp <- get_acs(state = "WV",
geography = "county",
variables = "B24031_002",
geometry = TRUE)
WV_tracts_mining.sp <- get_acs(state = "WV",
geography = "tract",
variables = "B24031_002",
geometry = TRUE)
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", palette = "BuPu", style = "jenks", title = "Counties") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WVTracts <- tm_shape(WV_tracts_mining.sp) + tm_fill("estimate", palette = "BuPu", style = "jenks", title = "Tracts") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(WVCounties,WVTracts)
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", n=4, palette = "-BrBG", style = "jenks", title = "Counties") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WVTracts <- tm_shape(WV_tracts_mining.sp) + tm_fill("estimate", m=4 palette = "-BrBG", style = "jenks", title = "Tracts") +
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", n=4, palette = "-BrBG", style = "jenks", title = "Counties") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WVTracts <- tm_shape(WV_tracts_mining.sp) + tm_fill("estimate", n=4, palette = "-BrBG", style = "jenks", title = "Tracts") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(WVCounties,WVTracts)
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", n=4, palette = "BuPu", style = "jenks", title = "Counties") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WVTracts <- tm_shape(WV_tracts_mining.sp) + tm_fill("estimate", n=4, palette = "BuPu", style = "jenks", title = "Tracts") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(WVCounties,WVTracts)
# ReMap
WVCounties <- tm_shape(WV_county_mining.sp) + tm_fill("estimate", n=4, palette = "BuPu", style = "jenks", title = "High Risk Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
WVTracts <- tm_shape(WV_tracts_mining.sp) + tm_fill("estimate", n=4, palette = "BuPu", style = "jenks", title = "High Risk Jobs") +
tm_borders(alpha=.4) +
tm_layout(legend.text.size = .8, legend.title.size = 1.0, legend.position = c("right", "bottom"), frame = FALSE)
tmap_arrange(WVCounties,WVTracts)
names(Census.Subset)[2:4]<- c("MedInc15", "AgMnJb15")
glimpse(Census.Subset)
names(Census.Subset)[2:3]<- c("MedInc15", "AgMnJb15")
glimpse(Census.Subset)
- learn some basics of R to make a more efficient analysis
- work with Census data, and learn to automate some data pulling
- compare data at the tract vs county level
# View the attributes associated with each county
# glimpse(County.Areas)
write.csv(WV_county, "WV_county.csv")
knitr::opts_chunk$set(echo = TRUE)
unique(LAcrime$`Crime Code Description`)
LAcrime.df<- as.data.frame(LAcrime)
# Base R subset:
#s1<-subset(LAcrime.df,LAcrime.df$`Crime Code Description`=="CRIMINAL HOMICIDE")
s1 = filter(LAcrime.df, `Crime Code Description`=="CRIMINAL HOMICIDE")
# Base R subset:
#s1<-subset(LAcrime.df,LAcrime.df$`Crime Code Description`=="CRIMINAL HOMICIDE")
s1 = filter(LAcrime.df, Crime Code Description =="CRIMINAL HOMICIDE")
# Base R subset:
#s1<-subset(LAcrime.df,LAcrime.df$`Crime Code Description`=="CRIMINAL HOMICIDE")
s1 = filter(LAcrime.df, 'Crime Code Description' =="CRIMINAL HOMICIDE")
head(s1)
dim(s1) #282
head(s1)
# Base R subset:
s1<-subset(LAcrime.df,LAcrime.df$`Crime Code Description`=="CRIMINAL HOMICIDE")
#s1 = filter(LAcrime.df, 'Crime Code Description' =="CRIMINAL HOMICIDE")
LAcrime.hom<-rbind(s1)
head(s1)
head(LAcrime.hom[,c("longitude","latitude")])
#LAcrime.pts <-SpatialPointsDataFrame(LAcrime.hom[,c("longitude","latitude")], LAcrime.hom, proj4string = CRS("+init=EPSG:4326"))
LAcrime.pts <- st_as_sf(LAcrime.hom, coords = c("longitude","latitude"), crs = 4326)
#LAcrime.pts <-SpatialPointsDataFrame(LAcrime.hom[,c("longitude","latitude")], LAcrime.hom, proj4string = CRS("+init=EPSG:4326"))
library(sf)
LAcrime.pts <- st_as_sf(LAcrime.hom, coords = c("longitude","latitude"), crs = 4326)
str(LAcrime.hom[,c("longitude", "latitude")])
LAcrime.hom$latitude <- as.numeric(LAcrime.hom$latitude)
LAcrime.hom$longitude <- as.numeric(LAcrime.hom$longitude)
#LAcrime.pts <-SpatialPointsDataFrame(LAcrime.hom[,c(28,27)], LAcrime.hom, proj4string = CRS("+init=EPSG:4326"))
LAcrime.pts <- st_as_sf(LAcrime.hom, coords = c("longitude","latitude"), crs = 4326)
LAcrime.hom.na <- subset(LAcrime.hom, is.na(LAcrime.hom[,c("longitude", "latitude")]))
str(LAcrime.hom.na) #1 observations
LAcrime.hom2 <- na.omit(LAcrime.hom[,c(DR Number","longitude", "latitude")])
LAcrime.hom2 <- na.omit(LAcrime.hom[,c("DR Number","longitude", "latitude")])
str(LAcrime.hom2)
#LAcrime.pts <-SpatialPointsDataFrame(LAcrime.hom2[,c(2,3)], LAcrime.hom2, proj4string = CRS("+init=EPSG:4326"))
LAcrime.pts <- st_as_sf(LAcrime.hom, coords = c("longitude","latitude"), crs = 4326)
#LAcrime.pts <-SpatialPointsDataFrame(LAcrime.hom2[,c(2,3)], LAcrime.hom2, proj4string = CRS("+init=EPSG:4326"))
LAcrime.pts <- st_as_sf(LAcrime.hom2, coords = c("longitude","latitude"), crs = 4326)
plot(LAcrime.pts)
LAcrimes<-LAcrime.pts
#LAtracts<-readOGR(".","LAC_Shape")
LAtracts<- st_read("LAC_Shape")
LAcrimes<-LAcrime.pts
#LAtracts<-readOGR(".","LAC_Shape")
LAtracts<- st_read("LAC_Shape.shp")
tmap_mode("plot")
library(tmap)
tmap_mode("plot")
tm_shape(LAcrime.pts) + tm_dots(alpha = 0.9, col="red") + tm_shape(LAtracts) + tm_borders(alpha = 0.4)
setwd("~/Desktop/Lab5-DataScript (1) 2")
setwd("~/Desktop/Lab5-DataScript (1) 2")
setwd("~/Desktop/Lab5-DataScript (1) 2")
LAcrimes<-LAcrime.pts
#LAtracts<-readOGR(".","LAC_Shape")
LAtracts<- st_read("LAC_Shape.shp")
library(tmap)
tmap_mode("plot")
tm_shape(LAcrime.pts) + tm_dots(alpha = 0.9, col="red") + tm_shape(LAtracts) + tm_borders(alpha = 0.4)
st_crs(LAcrimes)
st_crs(LAtracts)
CRS.new <- CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
#LAcrimes <- spTransform(LAcrimes, CRS.new)
LAcrimes <- st_transform(LAcrimes, CRS.new)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
test <- st_join(LAcrimes, LAtracts, join = st_within)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
test <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
test2 <- count(as_tibble(crime_in_tract), LAtracts)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
library(tidyverse)
test2 <- count(as_tibble(crime_in_tract), LAtracts)
LAcrimes<-LAcrime.pts
#LAtracts<-readOGR(".","LAC_Shape")
LAtracts<- st_read("LAC_Shape.shp")
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
CRS.new <- CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
#LAcrimes <- spTransform(LAcrimes, CRS.new)
LAcrimes <- st_transform(LAcrimes, CRS.new)
st_crs(LAcrimes)
st_crs(LAtracts)
CRS.new <- CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
#LAcrimes <- spTransform(LAcrimes, CRS.new)
LAcrimes <- st_transform(LAcrimes, CRS.new)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
test2 <- count(as_tibble(crime_in_tract), LAtracts)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
test2 <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = sum(n))
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = sum(n))
head(tract_tree_sf)
head(tract_tree_sf)
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = as.numeric(n))
head(tract_tree_sf)
head(tract_tree_sf)
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = as.numeric(crime_tract_count))
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = (crime_tract_count))
tract_tree_sf <- left_join(LAtracts, crime_tract_count) %>%
mutate(homicideCt = crime_tract_count)
tract_tree_sf <- left_join(LAtracts, crime_tract_count)
head(tract_tree_sf)
tm_shape(tract_tree_sf) + tm_fill()
head(tract_tree_sf)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="GEOID10")
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tm_shape(tract_tree_sf) + tm_fill(n)
head(tract_tree_sf)
head(test2)
head(LAtracts)
head(test2)
head(LAtracts)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
tm_shape(tract_tree_sf) + tm_fill(n)
tm_shape(tract_tree_sf) + tm_fill("n")
tmap_mode("view")
tm_shape(tract_tree_sf) + tm_fill("n")
tm_shape(tract_tree_sf) + tm_fill("n", n=4)
tm_shape(tract_tree_sf) + tm_fill("n", n=4, title="Homicides in 2015")
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
crime_tract_count <- table(as_tibble(crime_in_tract), TRACTCE10)
crime_tract_count <- table(as_tibble(crime_in_tract), "TRACTCE10")
crime_tract_count <- table(crime_in_tract, TRACTCE10)
tract_tree_sf$n = is.na(tract_tree_sf$n)] = 0
tract_tree_sf$n = if(is.na(tract_tree_sf$n,0)
head(tract_tree_sf)
tract_tree_sf$n = if(is.na(tract_tree_sf$n),0)
tract_tree_sf$n = if(tract_tree_sf$n == NA,0)
tract_tree_sf$n = if(is.na(tract_tree_sf$n),0)
reaplace.na(tract_tree_sf$n,0)
raplace.na(tract_tree_sf$n,0)
replace.na(tract_tree_sf$n,0)
library(tidyrverse)
library(tidyverse)
replace.na(tract_tree_sf$n,0)
library(tidye)
library(tidyr)
replace.na(tract_tree_sf$n,0)
replace_na(tract_tree_sf$n,0)
head(tract_tree_sf)
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tm_shape(tract_tree_sf) + tm_fill(a=0.5) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tm_shape(tract_tree_sf) + tm_fill() +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
head(LAtracts)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tmap_mode("view")
tm_shape(LAtracts) + tm_borders(alpha = 0.4) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tm_shape(LAtracts) + tm_borders(alpha = 0.8) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tmap_mode("plot")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="Homicides in 2015")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "Reds", title="LA Homicides in 2015")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "BuPu", title="LA Homicides in 2015")
LAcrimes <- st_transform(LAcrimes, "+proj=EPSG:2690")
LAcrimes <- st_transform(LAcrimes, CRS("+init=EPSG:2690"))
LAtracts <- st_transform(LAtracts, CRS("+init=EPSG:2690"))
#LApip <- over(LAcrimes, LAtracts)
#LAcrimes@data <- cbind(LAcrimes@data, LApip)
#library(tidyverse)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
head(test2)
head(LAtracts)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tmap_mode("plot")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "BuPu", title="LA Homicides in 2015")
tmap_mode("view")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "BuPu", title="LA Homicides in 2015")
tract_tree_sf <- st_transform(LAcrimes, CRS("+init=EPSG:4326"))
tract_tree_sf <- st_transform(tract_tree_sf, CRS("+init=EPSG:4326"))
tmap_mode("view")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "BuPu", title="LA Homicides in 2015")
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tract_tree_sf <- st_transform(tract_tree_sf, CRS("+init=EPSG:4326"))
tmap_mode("view")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("n", n=4, pal = "BuPu", title="LA Homicides in 2015")
st_crs(LAcrimes)
st_crs(LAcrimes)
Are the coordinate systems for crime points and tracts the same?
```{r}
st_crs(LAtracts)
```
If they match, we are ready for point-in-polygon (PIP) or spatial join operation. R is very finicky about wanting an identical CRS specification.  Since they don't match exactly by R standards, we need to transform our files into the same projection.
CRS.new <- CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
#LAcrimes <- spTransform(LAcrimes, CRS.new)
LAcrimes <- st_transform(LAcrimes, CRS.new)
CRS.new <- CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
#LAcrimes <- spTransform(LAcrimes, CRS.new)
LAcrimes <- st_transform(LAcrimes, CRS.new)
```{r}
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
LAtracts <- st_transform(LAtracts,CRS.new)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
crime_in_tract <- st_join(LAcrimes, LAtracts, join = st_within)
head(test)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10)
crime_tract_count <- count(as_tibble(crime_in_tract), TRACTCE10, forcats::fct_explicit_na)
crime_tract_count <- as.data.frame(table(crime_in_tract$TRACTCE10))
head(test2)
names(LAcrimeBytract) <- c("GEOID10","CrimeCt")
names(crime_tract_count) <- c("GEOID10","CrimeCt")
head(crime_tract_count)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
names(crime_tract_count) <- c("TRACTCE10","CrimeCt")
head(crime_tract_count)
head(LAtracts)
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
tract_tree_sf <- merge(LAtracts, crime_tract_count, by="TRACTCE10")
head(tract_tree_sf)
tmap_mode("plot")
tm_shape(LAtracts) + tm_borders(alpha = 0.2) +
tm_shape(tract_tree_sf) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
head(tract_tree_sf)
str(tract_tree_sf)
tm_shape(tract_tree_sf) + tm_fill("CrimeCt", n=4, pal = "BuPu", title="LA Homicides in 2015")
